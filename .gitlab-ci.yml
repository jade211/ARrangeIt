include:
  - template: Android.gitlab-ci.yml

variables:
  ANDROID_SDK: "34"
  ANDROID_BUILD_TOOLS: "34.0.0"


before_script:
  - cd src/ARrangeIt
  - apt-get update -y
  - apt-get install -y unzip wget tar curl lib32stdc++6 lib32z1
  - export ANDROID_HOME="${PWD}/android-home"
  - mkdir -p "$ANDROID_HOME"
  - wget -O $ANDROID_HOME/cmdline-tools.zip https://dl.google.com/android/repository/commandlinetools-linux-7583922_latest.zip
  - cd $ANDROID_HOME
  - unzip -d cmdline-tools cmdline-tools.zip
  - rm cmdline-tools.zip
  - cd cmdline-tools
  - mv cmdline-tools latest 
  - export PATH=$PATH:${ANDROID_HOME}/cmdline-tools/latest/bin/ 
  - ls ${ANDROID_HOME}/cmdline-tools/latest/bin/  
  - yes | sdkmanager --licenses || true
  - sdkmanager "platforms;android-${ANDROID_SDK}"
  - sdkmanager "platform-tools"
  - sdkmanager "build-tools;${ANDROID_BUILD_TOOLS}"
  - cd ..
  - cd ..
  - chmod +x ./gradlew  # Ensure Gradle wrapper is executable

stages:          # List of stages for jobs, and their order of execution
  - build
  - test
  - deploy

build-job:
  stage: build
  script:
    - ./gradlew assembleDebug 
    - ls ./app/build/outputs/ 
  artifacts:
    paths:
      - ./app/build/outputs/

# lint-job:
#   stage: build
#   script:
#     - ./gradlew lintDebug
#   artifacts:
#     paths:
#       - ./app/build/reports/lint/

# unit-test-job:   # This job runs in the test stage.
#   stage: test    # It only starts when the job in the build stage completes successfully.
#   script:
#     - echo "Running unit tests... Th"
#     - ./gradlew testDebug
#   artifacts:
#     paths:
#       - app/build/test-results/


# deploy-job:      # This job runs in the deploy stage.
#   stage: deploy  # It only runs when *both* jobs in the test stage complete successfully.
#   environment: production
#   script:
#     - echo "Deploying application..."
#     - echo "Application successfully deployed."
